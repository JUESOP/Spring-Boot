<div id="comments-list" class="pt-5">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header bg-light">
                {{nickname}}
                <!-- 수정 버튼 -->
                <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#comment-edit-modal"
                data-bs-id="{{id}}"
                data-bs-nickname="{{nickname}}"
                data-bs-body="{{body}}"
                data-bs-article-id="{{articleId}}"
                >수정</button>

                <!-- 삭제 버튼 -->
                <button type="button" class="btn btn-sm btn-outline-danger comment-delete-btn"
                        data-comment-id="{{id}}">삭제</button>
            </div>
            <div class="card-body">
                {{body}}
            </div>
        </div>
    {{/commentDtos}}
</div>

<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">댓글 수정</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- 댓글 작성 폼-->
                <form>
                    <!-- 닉네임 입력-->
                    <div class="mb-3">
                        <label class="form-label">닉네임</label>
                        <input class="form-control form-control-sm" id="edit-comment-nickname">
                    </div>

                    <!-- 댓글 본문 입력-->
                    <div class="mb-3">
                        <label class="form-label">댓글 내용</label>
                        <textarea class="form-control form-control-sm" rows="3" id="edit-comment-body"></textarea>
                    </div>

                    <!-- 히든 인풋 -->
                    <input type="hidden" id="edit-comment-id">
                    <input type="hidden" id="edit-comment-article-id">

                    <!-- 전송 버튼 -->
                    <button type="button" class="btn btn-outline-primary btn-sm" id="comment-update-btn">수정 완료</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- 모달 이벤트 처리 -->
<script>
    {
      //댓글 수정 눌렀을 때
        const commentEditModal = document.querySelector('#comment-edit-modal');
        commentEditModal.addEventListener("show.bs.modal", (e) => {
            const button = e.relatedTarget
            const id = button.getAttribute('data-bs-id');
            const nickname = button.getAttribute('data-bs-nickname');
            const body = button.getAttribute('data-bs-body');
            const articleId = button.getAttribute('data-bs-article-id');

            document.querySelector('#edit-comment-nickname').value = nickname;
            document.querySelector('#edit-comment-body').value = body;
            document.querySelector('#edit-comment-id').value = id;
            document.querySelector('#edit-comment-article-id').value = articleId;
        })
    }

    {
      //수정 완료 버튼
        const updateBtn = document.querySelector('#comment-update-btn');
        updateBtn.addEventListener("click", () => {
            const comment = {
                id: document.querySelector('#edit-comment-id').value,
                nickname: document.querySelector('#edit-comment-nickname').value,
                body: document.querySelector('#edit-comment-body').value,
                article_id: document.querySelector('#edit-comment-article-id').value,
            }

            const url = "/api/comments/" + comment.id;
            fetch(url, {
              method: "PATCH",
                body: JSON.stringify(comment),
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(response => {
                const msg = (response.ok) ? '댓글이 수정 되었습니다.' : '댓글 수정 실패..!';
                alert(msg);

                window.location.reload();
            })
        })
    }
</script>
<!-- 댓글 삭제 -->
<script>
{
    //삭제 버튼 선택
    const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");
    //삭제 버튼 이벤트를 처리
    commentDeleteBtns.forEach(btn => {
      //각 버튼의 이벤트 처리를 등록
      btn.addEventListener("click", (e) => {
        //삭제 댓글 id 가져오기
          let commentId = e.target.getAttribute('data-comment-id');
          //삭제 API 호출 및 처리
          const url = `/api/comments/${commentId}`;
          fetch(url, {
            method: "DELETE"
          }).then(response => {
              if (!response.ok) {
                alert("댓글 삭제 실패..!")
                  return;
              }
              //삭제 성공 시, 댓글을 화면에서 지움!
              const target = document.querySelector(`#comments-${commentId}`);
              target.remove();
          })
      })
    })
}
</script>